TODO: for RC1
- UI to CRUD
  + Generate UI forms from model
  - Validation in UI from entity annotations
  - Create entities with foreign key
    - Via simple textbox
    - Via search feature
  - Delete UI
  - Update UI
  - Search UI
    - Retain search results
    - Client filtering
  - Render exceptions in the UI
  - Allow custom ?freemarker? UIs via entity annotation
- Find for GET using all entities in path hierarchy (currently just last entity)
- Complex querying
- Finder exceptions
- Service validation
- Service exceptions
- Custom entity controller (via annotation)
- Jasmine tests for UI
- Throw appropriate exceptions from ContextBuilder
+ Remove hibernate collections from finder results before marshaling
+ Resolve JSON circular dependencies issue
+ Automatically call ContextBuilder
+ REST exceptions - map exceptions to HTTP status codes
+ Map GET Controller to service
+ Map PUT Controller to service
+ Map POST Controller to service
+ Map DELETE Controller to service

Context building/validation:
- Ensure uniqueness of paths for all methods
- Ensure only one URL for PUT/POST of an entity
- Update 'associations' via POST on attribute {entity}/{id}/{foreignKeyAttribute}
- Delete 'associations' via DELETE on attribute {rootEntity}/{rootId}/{entity}/{id} ???
- Http DELETE as root deletes entity {entity}/{id}
+ Create/Update entities via PUT/POST on root

-----------------------------------------------------------
-----------------------------------------------------------
-----------------------------------------------------------

Modules:
- Core
- Web service
- Web UI
- Generator

High level
- Domain Object
- MVC controller
- Hibernate persistence

Controller mapping per domain object
- 'Codeless' default behaviour
- Can override/delegate custom controller
- URL hierarchy need to map to object hierarchy

Web XML manual config?
- Spring context loader
- Web MVC dispatcher servlet

Top = !Child
Parent = OneToOne || One2Many ||  ManyToMany
Child = ManyToOne

#mvn versions:display-dependency-updates
org.hibernate.InstantiationException: No default constructor for entity: org.cccs.parrot.domain.Country
